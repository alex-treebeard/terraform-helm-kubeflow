apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: {{ .Values.name }}
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: kubeflow
    server: https://kubernetes.default.svc
  project: default
  source:
    path: {{ .Values.path }}
    repoURL: {{ .Values.repoURL }}
    targetRevision: {{ .Values.targetRevision }}
operation:
  sync:
    syncStrategy:
      apply: {}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Values.name }}-wait-for-sync
  namespace: argo-cd
spec:
  template:
    spec:
      serviceAccount: argocd-server
      containers:
      - name: check-sync
        image: bitnami/kubectl
        command: ["/bin/sh","-c"]
        args:
        - |
          set -e
          APP_NAME="{{ .Values.name }}"
          NAMESPACE="argo-cd"
          until kubectl get -n $NAMESPACE app $APP_NAME -o jsonpath='{.status.operationState.phase}' | grep -q "Succeeded"; do
            echo "Waiting for app $APP_NAME to be successfully synced..."
            sleep 3
          done
          echo "App $APP_NAME has been successfully synced."
        
          kubectl get -n $NAMESPACE app $APP_NAME -o json | jq '.status.operationState'
      restartPolicy: Never
  backoffLimit: 1
  activeDeadlineSeconds: 100
  ttlSecondsAfterFinished: 30