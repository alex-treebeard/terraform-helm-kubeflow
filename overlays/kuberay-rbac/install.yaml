apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeflow-ray-admin
  labels:
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-admin: 'true'
rules:
- apiGroups:
  - ray.io
  verbs: ["*"]
  resources: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeflow-ray-editor
  labels:
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-edit: 'true'
rules:
- apiGroups:
  - ray.io
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
  resources: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeflow-ray-viewer
  labels:
    rbac.authorization.kubeflow.org/aggregate-to-kubeflow-view: 'true'
rules:
- apiGroups:
  - ray.io
  verbs: ["get", "list", "watch"]
  resources: ["*"]
---
apiVersion: security.istio.io/v1beta1
kind: AuthorizationPolicy
metadata:
  name: kuberay
  namespace: istio-system
spec:
  action: ALLOW
  selector:
    matchLabels:
      ray.io/is-ray-node: 'yes'
  rules:
    - from:
        - source:
            principals:
              - cluster.local/ns/kubeflow/sa/kuberay-operator
---
# this seems to be unnecessary for workspace -> ray service
# apiVersion: security.istio.io/v1beta1
# kind: AuthorizationPolicy
# metadata:
#   name: raycluster-editor
#   namespace: kubeflow-user-example-com
# spec:
#   action: ALLOW
#   rules:
#     - from:
#         - source:
#             principals:
#               - cluster.local/ns/kubeflow-user-example-com/sa/default-editor
#   selector:
#     matchLabels:
#       ray.io/is-ray-node: 'yes'